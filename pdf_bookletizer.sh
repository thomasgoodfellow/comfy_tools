#!/bin/bash
# Imposition of an A4 PDF document to generate a A5 booklet
# Depends on package gs
# Parameter: $1 - full path of original document
# Generates a new PDF in the same directory with "_book" appended to filename
# Needs a blank PDF (called blank.pdf) in the same directory as the script
# (crudely generated by printing a 1x1 white bitmap from GIMP)

# Arg: page number
# Result to STDOUT: fragment of GS commandline to select just that page from the correct doc
function GSPage() 
{
    local DOC=$DOC_ORIGINAL
    local PAGE=$1
    if test $1 -gt $NUM_PAGES ; then DOC="$SCRIPTDIR/blank.pdf" ; PAGE=1 ; fi
    echo "-dFirstPage=$PAGE -dLastPage=$PAGE $DOC"
} 
    
SCRIPTDIR=`dirname $0`
DOC_ORIGINAL="$1"
if [ "$DOC_ORIGINAL" == "" ] ; then echo "Parameter: PDF file to generate booklet version (_book appended)" ; exit 1 ; fi

# number of pages of original PDF
NUM_PAGES=`pdfinfo "$DOC_ORIGINAL" | grep Pages | sed 's/^Pages:[ ]*\([0-9]*\).*$/\1/g'`
# how many blank pages to add
NUM_BLANKS=$(((4 - $NUM_PAGES % 4) % 4))

# Page layout is as quads: [n 1 2 n-1] [n-2 3 4 n-3] 
LOWER=1
UPPER=$(($NUM_PAGES + $NUM_BLANKS))
NUM_QUADS=$(($UPPER / 4))
GSCMD="gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -sOutputFile=${DOC_ORIGINAL%.*}_book.pdf"
for(( q = 1; q <= $NUM_QUADS; ++q )) 
do
    F1=$( GSPage $UPPER )
    F2=$( GSPage $LOWER )
    F3=$( GSPage $(($LOWER + 1)) )
    F4=$( GSPage $(($UPPER - 1)) )
    GSCMD="$GSCMD $F1 $F2 $F3 $F4"
    UPPER=$(($UPPER - 2))
    LOWER=$(($LOWER + 2))
done
echo "Exec: $GSCMD"
`time $GSCMD`
echo "!! Remember to set appropriate layout, e.g. double-sided, short-edge-flip, 2 pages per side !!"
